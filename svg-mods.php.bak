<?php
// svg2datauri.php
// Paste raw SVG â†’ get CSS-ready data URI (percent-encoded) and optional base64.
// No external libs. PHP 7.4+.

function normalize_svg(string $svg, bool $strip_root_wh = true, bool $strip_root_class = true): string
{
    // Trim BOM & whitespace
    $svg = preg_replace('/^\xEF\xBB\xBF/', '', $svg ?? '');
    $svg = trim($svg);

    if ($svg === '') {
        return '';
    }

    // Remove XML declaration and comments to reduce bytes
    $svg = preg_replace('/^\s*<\?xml[^>]*>\s*/i', '', $svg);
    $svg = preg_replace('/<!--.*?-->/s', '', $svg);

    // Ensure xmlns on root <svg>
    if (stripos($svg, 'xmlns=') === false) {
        $svg = preg_replace(
            '/<svg\b(?![^>]*\sxmlns=)([^>]*)>/i',
            '<svg$1 xmlns="http://www.w3.org/2000/svg">',
            $svg,
            1
        );
    }

    // Edit ONLY the opening <svg ...> tag (root). Leave children intact.
    $svg = preg_replace_callback(
        '/<svg\b[^>]*>/i', function ($m) use ($strip_root_wh, $strip_root_class) {
            $open = $m[0];

            if ($strip_root_wh) {
                // Remove width/height on ROOT ONLY (keep viewBox)
                $open = preg_replace('/\swidth\s*=\s*"[^"]*"/i', '', $open);
                $open = preg_replace("/\swidth\s*=\s*'[^']*'/i", '', $open);
                $open = preg_replace('/\sheight\s*=\s*"[^"]*"/i', '', $open);
                $open = preg_replace("/\sheight\s*=\s*'[^']*'/i", '', $open);
            }

            if ($strip_root_class) {
                // Remove class on ROOT ONLY (keep classes on shapes)
                $open = preg_replace('/\sclass\s*=\s*"[^"]*"/i', '', $open);
                $open = preg_replace("/\sclass\s*=\s*'[^']*'/i", '', $open);
            }

            // Normalize double spaces around tag
            $open = preg_replace('/\s+>$/', '>', $open);
            return $open;
        }, $svg, 1
    );

    // Collapse whitespace/newlines globally (safe for paths)
    $svg = preg_replace('/\s+/', ' ', $svg);
    $svg = str_replace('> <', '><', $svg);

    return trim($svg);
}

/**
 * Percent-encode SVG for CSS data URI.
 * rawurlencode, then restore safe bytes to keep it short & readable.
 */
function svg_to_data_uri(string $svg): string
{
    $encoded = rawurlencode($svg);

    // Restore safe characters
    $search  = ['%20','%3D','%3A','%2F','%2C','%3B','%28','%29','%23',"%'","%22"];
    $replace = [' ',  '=',  ':',  '/',  ',',  ';',  '(',  ')',  '#',  "'",  '%22'];
    // Note: keep double quotes encoded as %22 so CSS url("...") is safe.
    $encoded = str_replace($search, $replace, $encoded);

    return 'data:image/svg+xml,' . $encoded;
}

function svg_to_base64(string $svg): string
{
    return 'data:image/svg+xml;base64,' . base64_encode($svg);
}

function h($s)
{
    return htmlspecialchars($s, ENT_QUOTES, 'UTF-8');
}

$input_svg        = isset($_POST['svg']) ? (string)$_POST['svg'] : '';
$strip_root_wh    = isset($_POST['strip_wh']);     // unchanged label in UI
$strip_root_class = isset($_POST['strip_class']);  // unchanged label in UI
$show_base64      = isset($_POST['show_base64']);

$normalized   = '';
$data_uri_css = '';
$data_uri_b64 = '';
$bg_snippet   = '';
$mask_snippet = '';

if ($input_svg !== '') {
    $normalized   = normalize_svg($input_svg, $strip_root_wh, $strip_root_class);
    $data_uri_css = svg_to_data_uri($normalized);
    $bg_snippet   = 'background-image: url("' . $data_uri_css . '");';
    $mask_snippet = 'mask-image: url("' . $data_uri_css . '");' . "\n" .
        '-webkit-mask-image: url("' . $data_uri_css . '");';
    if ($show_base64) {
        $data_uri_b64 = svg_to_base64($normalized);
    }
}
?>
<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>SVGready - Convert SVG to CSS Data URI</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="style.css">
<script>
function copyToClipboard(text, button) {
    navigator.clipboard.writeText(text).then(function() {
        const originalText = button.textContent;
        button.textContent = 'Copied!';
        button.classList.add('copied');
        setTimeout(function() {
            button.textContent = originalText;
            button.classList.remove('copied');
        }, 2000);
    }).catch(function(err) {
        console.error('Failed to copy: ', err);
        button.textContent = 'Failed';
        setTimeout(function() {
            button.textContent = 'Copy';
        }, 2000);
    });
}

</script>
</head>
<body>
<div class="wrap">
    <h1>SVGready - Convert SVG to CSS Data URI</h1>

    <div class="main-layout">
        <!-- Input Section -->
        <div class="input-section">
            <form method="post">
                <div class="row">
                    <div class="label">Paste raw SVG markup</div>
                    <textarea name="svg" placeholder="<svg ...>..."><?php echo isset($_POST['svg']) ? h($_POST['svg']) : ''; ?></textarea>
                    <div class="small">Tip: Prefer single quotes inside the SVG (e.g. <code>stroke='currentColor'</code>)
                        to avoid escaping double quotes in CSS.</div>
                </div>
                <div class="opts">
                    <label><input type="checkbox" name="strip_wh" <?php echo $strip_root_wh?'checked':''; ?>> Strip width/height on root &lt;svg&gt;</label>
                    <label><input type="checkbox" name="strip_class" <?php echo $strip_root_class?'checked':''; ?>> Remove class on root &lt;svg&gt;</label>
                    <label><input type="checkbox" name="show_base64" <?php echo $show_base64?'checked':''; ?>> Also show base64</label>
                </div>
                <div class="row"><button class="btn" type="submit">Convert</button></div>
            </form>
        </div>

        <!-- Output Section -->
        <div class="output-section">
            <?php if ($input_svg !== '') : ?>
                <div class="row">
                    <div class="label">SVG Preview:</div>
                    <div class="preview-container">
                        <?php echo $normalized; ?>
                    </div>
                </div>

                <div class="row">
                    <div class="label">Normalized SVG: <button class="copy-btn" onclick="copyToClipboard('<?php echo h($normalized); ?>', this)">Copy</button></div>
                    <pre><code id="normalized-svg"><?php echo h($normalized); ?></code></pre>
                </div>

                <div class="row">
                    <div class="label">Percent-encoded data URI: <button class="copy-btn" onclick="copyToClipboard('<?php echo h($data_uri_css); ?>', this)">Copy</button></div>
                    <pre><code id="data-uri"><?php echo h($data_uri_css); ?></code></pre>
                    <div class="small">Use this (quoted) in CSS: <code>url("&hellip;")</code></div>
                </div>

                <div class="row">
                    <div class="label">Background Image CSS: <button class="copy-btn" onclick="copyToClipboard('<?php echo h($bg_snippet); ?>', this)">Copy</button></div>
                    <pre><code id="bg-snippet"><?php echo h($bg_snippet); ?></code></pre>
                </div>

                <div class="row">
                    <div class="label">Mask Image CSS: <button class="copy-btn" onclick="copyToClipboard('<?php echo h($mask_snippet); ?>', this)">Copy</button></div>
                    <pre><code id="mask-snippet"><?php echo h($mask_snippet); ?></code></pre>
                </div>

                <?php if ($show_base64) : ?>
                <div class="row">
                    <div class="label">Base64 data URI (larger, but also works): <button class="copy-btn" onclick="copyToClipboard('<?php echo h($data_uri_b64); ?>', this)">Copy</button></div>
                    <pre><code id="base64-uri"><?php echo h($data_uri_b64); ?></code></pre>
                </div>
                <?php endif; ?>
            <?php else : ?>
                <div style="text-align: center; color: var(--muted); padding: 40px 20px;">
                    <h3>Ready to convert your SVG?</h3>
                    <p>Paste your SVG markup in the left panel and click Convert to get started.</p>
                </div>
            <?php endif; ?>
        </div>
    </div>
</div>
</body>
</html>
